version: "3.8"

services:
  # PostgreSQL database for Coder
  postgres:
    image: postgres:15
    container_name: cloudide-postgres
    environment:
      POSTGRES_DB: coder
      POSTGRES_USER: coder
      POSTGRES_PASSWORD: coder_dev_password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - cloudide-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U coder -d coder"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: cloudide-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cloudide-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Simple code-server development environment
  code-server:
    image: codercom/code-server:4.20.0
    container_name: cloudide-code-server
    environment:
      - PASSWORD=cloudide123
    ports:
      - "8080:8080"
    volumes:
      - ./workspace:/home/coder/workspace
      - code_server_data:/home/coder/.local/share/code-server
    networks:
      - cloudide-network
    command: --bind-addr 0.0.0.0:8080 --auth password /home/coder/workspace
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # CloudIDE+ Development Container
  cloudide-dev:
    image: node:18-bullseye
    container_name: cloudide-dev-tools
    working_dir: /workspace
    environment:
      - NODE_ENV=development
      - POSTGRES_URL=postgres://coder:coder_dev_password@postgres:5432/coder
      - REDIS_URL=redis://redis:6379
    volumes:
      - ../:/workspace/cloudide-plus
      - node_modules:/workspace/node_modules
    networks:
      - cloudide-network
    command: tail -f /dev/null
    depends_on:
      - postgres
      - redis

  # Extension Development Environment
  extension-dev:
    image: node:18-bullseye
    container_name: cloudide-extension-dev
    working_dir: /workspace
    environment:
      - NODE_ENV=development
    volumes:
      - ../extensions:/workspace/extensions
      - extension_node_modules:/workspace/node_modules
    networks:
      - cloudide-network
    command: |
      bash -c "
        npm install -g @vscode/vsce yo generator-code &&
        echo 'ðŸ”Œ Extension development environment ready!' &&
        echo 'Available commands:' &&
        echo '  yo code - Create new extension' &&
        echo '  vsce package - Package extension' &&
        tail -f /dev/null
      "

  # Prometheus monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: cloudide-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - cloudide-network
    profiles:
      - monitoring

  # Grafana dashboard (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: cloudide-grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - cloudide-network
    depends_on:
      - prometheus
    profiles:
      - monitoring

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  code_server_data:
    driver: local
  node_modules:
    driver: local
  extension_node_modules:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  cloudide-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
